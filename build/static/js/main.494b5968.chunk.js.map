{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Search","Input","App","props","firstRender","len","state","initCalculateWidthAndHeight","widCount","heightCount","calculateCount","setState","handleDrag","event","window","preventDefault","handleDragStart","e","dataTransfer","setData","target","getAttribute","sortRoot","document","getElementsByClassName","className","handleDragOver","handleDrop","toIndex","fromIndex","getData","goodsData","deleteIndex","splice","animateIndex","classTitle","producrtLi","setTimeout","handleDragEnd","setRowCount","Row_Count","Column_Count","judegeWarning","setColumnCount","Product_Width","length","message","warning","Three_Origin","Four_Origin","Math","ceil","judgeSearchProduct","name","isSearch","includes","keywords","background","handleSearch","value","saveSort","initData","JSON","parse","stringify","pageLoading","success","resetSort","extraRender","placeholder","style","width","marginRight","onSearch","onChange","precision","min","onClick","type","liRender","orign","cutCount","topOrBottom","liStyle","map","item","index","shortName","productNum","data-index","key","draggable","getPopupContainer","title","visible","this","spinning","routes","params","bordered","extra","onDrag","onDragStart","onDragOver","onDragEnd","onDrop","React","Component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.494b5968.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport './App.scss';\r\n\r\nimport { Breadcrumb, Button, Card, InputNumber, message, Spin, Tooltip, Input } from 'antd';\r\nconst Search = Input.Search;\r\n\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let Row_Count = 18;\r\n        let Column_Count = 6;\r\n\r\n        this.state = {\r\n            goodsData: [{ \"shortName\": \"大碗牛腩河粉\" },\r\n            {\"shortName\": \"暴力小番茄\" },\r\n            {\"shortName\": \"猪肠粉\" },\r\n            {\"shortName\": \"无骨仙掌\" },\r\n            {\"shortName\": \"蛋黄流沙包\" },\r\n            {\"shortName\": \"香辣鱼蛋\" },\r\n            {\"shortName\": \"秘制酸菜dd\" },\r\n            {\"shortName\": \"排骨陈村粉\" },\r\n            {\"shortName\": \"土豆沙拉\" },\r\n            {\"shortName\": \"肉酱车仔面（原味）\" },\r\n            { \"shortName\": \"香煎鸡扒\" },\r\n            { \"shortName\": \"泡椒凤爪\" },\r\n            { \"shortName\": \"麻辣烫\" },\r\n            { \"shortName\": \"水煮牛肉\" }, \r\n            { \"shortName\": \"皮蛋瘦肉粥\" }, \r\n            { \"shortName\": \"日式煎饺\" }, \r\n            { \"shortName\": \"香辣鱼块\" }, \r\n            { \"shortName\": \"香菇肉饺子\\u00284个\\u0029\" }, \r\n            { \"shortName\": \"花旗参肉汁汤\" }, \r\n            { \"shortName\": \"茶叶蛋\" }, \r\n            { \"shortName\": \"咖喱鱼蛋\" }, \r\n            { \"shortName\": \"牛肉球\" }, \r\n            { \"shortName\": \"鱼皮饺\" }, \r\n            { \"shortName\": \"白饭\" }, \r\n            { \"shortName\": \"桂林米粉\" }, \r\n            { \"shortName\": \"肉菜包 一个\" }, \r\n            { \"shortName\": \"海蜇丝\" }, \r\n            { \"shortName\": \"瑶柱白果粥\" }, \r\n            { \"shortName\": \"爽口泡菜\" }, \r\n            { \"shortName\": \"港式云吞面\" }, \r\n            { \"shortName\": \"鸡中翅\" }, \r\n            { \"shortName\": \"油盐饭\" }, \r\n            { \"shortName\": \"卤肉饭团\" }, \r\n            { \"shortName\": \"肉酱车仔面\\u0028辣味\\u0029\" }, \r\n            { \"shortName\": \"波波肠\" }, \r\n            { \"shortName\": \"虫草花炖鸡脚汤\" }, \r\n            { \"shortName\": \"鱼香茄子\" }, \r\n            { \"shortName\": \"鲜虾鱿鱼海鲜燕麦汤面\" }, \r\n            { \"shortName\": \"马拉炒饭\" }, \r\n            { \"shortName\": \"肉酱芝士焗饭\" }, \r\n            { \"shortName\": \"腿肉蛋三文治\" }, \r\n            { \"shortName\": \"海带黄豆汤\" }, \r\n            { \"shortName\": \"香辣鱼豆腐\\u00285粒\\u0029\" }, \r\n            { \"shortName\": \"黑椒鸡扒\" }, \r\n            { \"shortName\": \"海鲜汤饭\" }, \r\n            { \"shortName\": \"咖喱鱼豆腐\\u00285粒\\u0029\" }, \r\n            { \"shortName\": \"脆皮萝卜\" }, \r\n            { \"shortName\": \"清口毛豆\\u0028冷食\\u0029\" }, \r\n            { \"shortName\": \"手工酸奶\" }, \r\n            { \"shortName\": \"车仔面\" },\r\n            { \"shortName\": \"四海鱼肉烧麦\" }, \r\n            { \"shortName\": \"糯米鸡\\u00281个\\u0029\" }, \r\n            { \"shortName\": \"南瓜粥\" },\r\n            { \"shortName\": \"凉拌鱼皮\" },\r\n            { \"shortName\": \"香辣鸡翅\" },\r\n            { \"shortName\": \"老北京鸡卷\" },\r\n            { \"shortName\": \"三鲜粥\" },\r\n            { \"shortName\": \"三及第汤\" },\r\n            { \"shortName\": \"客家腌面\" },\r\n            { \"shortName\": \"清汤肉丸\" },\r\n            ],\r\n            initData: [],\r\n\r\n            Row_Count,\r\n            Column_Count,\r\n            Three_Origin: Row_Count + Column_Count,\r\n            Four_Origin: 2 * Row_Count + Column_Count,\r\n            Product_Width: 100 / Row_Count + \"%\",\r\n\r\n            pageLoading: false,\r\n\r\n            keywords: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.firstRender(this.state.goodsData.length);\r\n        this.setState({ initData: JSON.parse(JSON.stringify(this.state.goodsData)) });\r\n    }\r\n\r\n    firstRender = (len) => {\r\n        // 默认展示所有商品, 按宽高3：1比例\r\n        let state = {};\r\n        let { widCount, heightCount } = this.initCalculateWidthAndHeight(len);\r\n\r\n        state = this.calculateCount(widCount, heightCount);\r\n        this.setState(state);\r\n    }\r\n\r\n    handleDrag = (event) => {\r\n        let e = event || window.event;\r\n        e.preventDefault(); // drop 事件的默认行为是以链接形式打开\r\n    }\r\n    handleDragStart = (event) => {\r\n        let e = event || window.event;\r\n        e.dataTransfer.setData(\"fromIndex\", e.target.getAttribute(\"data-index\"));\r\n\r\n        let sortRoot = document.getElementsByClassName(\"customize_sort_root\")[0];\r\n\r\n        sortRoot.className = `${sortRoot.className} sorting_style`;\r\n    }\r\n    handleDragOver = (event) => {\r\n        let e = event || window.event;\r\n        e.preventDefault(); // 默认地，无法将数据/元素放置到其他元素中。\r\n    }\r\n\r\n    /* \r\n    * 拿到拖拽商品的index, 和放置商品的index进行数组位置调换\r\n    */\r\n    handleDrop = (event) => {\r\n        let e = event || window.event;\r\n        let toIndex = e.target.getAttribute(\"data-index\");\r\n        let fromIndex = e.dataTransfer.getData(\"fromIndex\");\r\n\r\n        if (typeof toIndex === \"string\" && toIndex !== fromIndex) {\r\n            let goodsData = this.state.goodsData;\r\n\r\n            // 插入\r\n            let deleteIndex = (+fromIndex > +toIndex) ? +fromIndex + 1 : fromIndex;\r\n            goodsData.splice(toIndex, 0, goodsData[fromIndex]); // 插入\r\n            goodsData.splice(deleteIndex, 1); // 删除fromIndex的元素\r\n\r\n            let animateIndex = (+fromIndex > +toIndex) ? toIndex : toIndex - 1;\r\n\r\n            this.setState({ goodsData }, () => {\r\n                // 添加插入动画\r\n                let classTitle = \"product_sort_li_\" + animateIndex;\r\n                let producrtLi = document.getElementsByClassName(classTitle)[0];\r\n                producrtLi.className = `${classTitle} insert_move`;\r\n                setTimeout(() => {\r\n                    producrtLi.className = classTitle;\r\n                }, 1100)\r\n            });\r\n        }\r\n    }\r\n\r\n    handleDragEnd = () => {\r\n        let sortRoot = document.getElementsByClassName(\"customize_sort_root\")[0];\r\n        sortRoot.className = \"customize_sort_container customize_sort_root\";\r\n    }\r\n\r\n    setRowCount = (Row_Count) => {\r\n        if (typeof Row_Count !== \"number\" || Row_Count < 1) {\r\n            return;\r\n        }\r\n\r\n        let state = this.calculateCount(Row_Count, this.state.Column_Count);\r\n\r\n        this.setState(state, this.judegeWarning);\r\n    }\r\n    setColumnCount = (Column_Count) => {\r\n        if (typeof Column_Count !== \"number\" || Column_Count < 1) {\r\n            return;\r\n        }\r\n\r\n        let state = this.calculateCount(this.state.Row_Count, Column_Count);\r\n        delete state.Product_Width;\r\n\r\n        this.setState(state, this.judegeWarning);\r\n    }\r\n\r\n    judegeWarning = () => {\r\n        if (2 * (this.state.Row_Count + this.state.Column_Count) < this.state.goodsData.length) {\r\n            message.warning('注意：您设置的布局空间不足以放置所有商品');\r\n        }\r\n    }\r\n\r\n    calculateCount = (Row_Count, Column_Count) => {\r\n        let Three_Origin = Row_Count + Column_Count;\r\n        let Four_Origin = Three_Origin + Row_Count;\r\n        let Product_Width = 100 / Row_Count + \"%\";\r\n\r\n        return { Row_Count, Column_Count, Three_Origin, Four_Origin, Product_Width };\r\n    }\r\n\r\n    /* 根据商品数量， 按3：1比例布局， 所以要求出宽高的数量。（注意：宽高有重叠部分）\r\n    * 公式I 2*(widCount + heightCount)= len  公式II widCount/(heightCount+2) = 3/1\r\n    * 计算得出 heightCount = L/8-3/2\r\n    * widCount = 3*heightCount+6\r\n    * 对结果取整\r\n    */\r\n    initCalculateWidthAndHeight = (len) => {\r\n        let heightCount = Math.ceil(len/8-3/2);\r\n        let widCount = Math.ceil(3*heightCount+6);\r\n        return { widCount, heightCount };\r\n    }\r\n\r\n    judgeSearchProduct = (name = \"\") => {\r\n        let isSearch = name.includes(this.state.keywords)\r\n        return {\r\n            background: isSearch ? \"#FB0A29\" : \"#fff\",\r\n            isSearch\r\n        }\r\n    }\r\n\r\n    handleSearch = (value) => {\r\n        if (!value) {\r\n            value = null;\r\n        }\r\n        this.setState({ keywords: value });\r\n    }\r\n\r\n    saveSort = () => {\r\n        this.setState({ initData: JSON.parse(JSON.stringify(this.state.goodsData)), pageLoading: true });\r\n        setTimeout(() => {\r\n            this.setState({ pageLoading: false });\r\n            message.success(\"保存成功\");\r\n        }, 500)\r\n    }\r\n\r\n    resetSort = () => {\r\n        this.setState({\r\n            goodsData: JSON.parse(JSON.stringify(this.state.initData))\r\n        }, () => {\r\n            message.success(\"已重置\");\r\n        });\r\n    }\r\n\r\n    // Render\r\n    extraRender = () => {\r\n        return (<div>\r\n            <Search\r\n                placeholder=\"搜索商品名称\"\r\n                style={{ width: 120, marginRight: 8 }}\r\n                onSearch={this.handleSearch}\r\n            />\r\n            商品数量：\r\n            <span className=\"goods_count_tips\">\r\n                {this.state.goodsData.length}\r\n            </span>\r\n            行数量：\r\n            <InputNumber\r\n                value={this.state.Row_Count}\r\n                onChange={this.setRowCount}\r\n                precision={0} min={1}\r\n                style={{ marginRight: 5 }}\r\n            />\r\n            列数量：\r\n            <InputNumber\r\n                value={this.state.Column_Count}\r\n                onChange={this.setColumnCount}\r\n                precision={0} min={1}\r\n                style={{ marginRight: 5 }}\r\n            />\r\n            <Button onClick={this.resetSort} style={{ marginRight: 5 }}>\r\n                重置排序\r\n            </Button>\r\n            <Button onClick={this.saveSort} type=\"primary\">\r\n                保存排序\r\n            </Button>\r\n        </div>)\r\n    }\r\n\r\n    liRender = (orign, cutCount, topOrBottom) => {\r\n\r\n        let liStyle = {};\r\n        if (topOrBottom) {\r\n            liStyle.width = this.state.Product_Width;\r\n        }\r\n\r\n        return JSON.parse(JSON.stringify(this.state.goodsData)).splice(orign, cutCount).map((item, index) => {\r\n\r\n            let { background, isSearch } = this.judgeSearchProduct(item.shortName);\r\n            let productNum = index + orign;\r\n\r\n            return <li data-index={productNum} key={productNum} style={{ ...liStyle, background }} draggable=\"true\" className={\"product_sort_li_\" + productNum}>\r\n                <div className=\"index_text\">{productNum + 1}</div>\r\n                <div className=\"blank_placeholder_box\" data-index={productNum}></div>\r\n                <div className=\"product_name\" data-index={productNum}>\r\n                    {\r\n                        isSearch\r\n                            ?\r\n                            <Tooltip getPopupContainer={() => document.getElementsByClassName(\"customize_sort_root\")[0]} title={item.shortName} visible={true} key=\"show\">\r\n                                <span data-index={productNum}>{item.shortName}</span>\r\n                            </Tooltip>\r\n                            :\r\n                            <Tooltip title={item.shortName} key=\"default\">\r\n                                <span data-index={productNum}>{item.shortName}</span>\r\n                            </Tooltip>\r\n                    }\r\n                </div>\r\n            </li>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { state } = this;\r\n        const { Row_Count, Column_Count, Three_Origin, Four_Origin, Product_Width } = state;\r\n        return <div className=\"page\">\r\n            <Spin spinning={state.pageLoading}>\r\n                <Breadcrumb routes={this.props.routes} params={this.props.params} />\r\n                <Card\r\n                    className=\"customize_sort_card\"\r\n                    bordered={false}\r\n                    title=\"环形布局+拖拽排序\"\r\n                    extra={this.extraRender()}\r\n                >\r\n                    {state.goodsData.length ? null : <div className=\"empty_txt\">暂无商品</div>}\r\n                    <div className={\"customize_sort_container customize_sort_root\"}\r\n                        onDrag={this.handleDrag}\r\n                        onDragStart={this.handleDragStart}\r\n                        onDragOver={this.handleDragOver}\r\n                        onDragEnd={this.handleDragEnd}\r\n                        onDrop={this.handleDrop}\r\n                    // onDragEnter={this.handleDragEnter}\r\n                    >\r\n                        <section>\r\n                            <ul>\r\n                                {this.liRender(0, Row_Count, true)}\r\n                            </ul>\r\n                        </section>\r\n                        <section>\r\n                            <ul style={{ width: Product_Width }}>\r\n                                {this.liRender(Row_Count, Column_Count)}\r\n                            </ul>\r\n                        </section>\r\n                        <section>\r\n                            <ul style={{ width: Product_Width }}>\r\n                                {JSON.parse(JSON.stringify(state.goodsData)).splice(Four_Origin, Column_Count).length ? <li className=\"blank_placeholder_li\"></li> : null}\r\n                                {this.liRender(Four_Origin, Column_Count)}\r\n                            </ul>\r\n                        </section>\r\n                        <section>\r\n                            <ul>\r\n                                {this.liRender(Three_Origin, Row_Count, true)}\r\n                            </ul>\r\n                        </section>\r\n                    </div>\r\n                </Card>\r\n            </Spin>\r\n        </div>;\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}